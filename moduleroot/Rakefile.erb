<%
def requires(item)
  if item.is_a? String
    line = "require '#{item}'"
  elsif item.is_a? Hash
    line = "require '#{item['require']}'" unless item['require'].nil?
    line = "#{line} if #{item['conditional']}" unless item['require'].nil? and item['conditional'].nil?
  end
  line
end
-%>
require 'puppetlabs_spec_helper/rake_tasks'
require 'puppet-syntax/tasks/puppet-syntax'
require 'puppet_blacksmith/rake_tasks' if Bundler.rubygems.find_name('puppet-blacksmith').any?
require 'github_changelog_generator/task' if Bundler.rubygems.find_name('github_changelog_generator').any?
require 'puppet-strings/tasks' if Bundler.rubygems.find_name('puppet-strings').any?
<% if ! @configs['requires'].nil? -%>
<%   @configs['requires'].each do |item| -%>
<%= requires(item) %>
<%   end -%>
<% end -%>
<% if ! @configs['imports'].nil? %>
<%   @configs['imports'].each do |item| -%>
import '<%= item %>'
<%   end -%>
<% end -%>

<% checks = @configs['default_disabled_lint_checks'] + ( @configs['extra_disabled_lint_checks'] || [] ) -%>
<% checks.each do |check| -%>
PuppetLint.configuration.send('disable_<%= check %>')
<% end -%>
<% checks = @configs['default_lint_checks'] + ( @configs['extra_lint_checks'] || [] ) -%>
<% checks.each do |check| -%>
PuppetLint.configuration.send('<%= check %>')
<% end -%>

if Bundler.rubygems.find_name('github_changelog_generator').any?
  GitHubChangelogGenerator::RakeTask.new :changelog do |config|
    version = (Blacksmith::Modulefile.new).version
    config.future_release = "v#{version}" if version =~ /^\d+\.\d+.\d+$/
    config.header = "# Changelog\n\nAll notable changes to this project will be documented in this file.\nEach new release typically also includes the latest modulesync defaults.\nThese should not affect the functionality of the module."
    config.exclude_labels = %w{duplicate question invalid wontfix wont-fix modulesync skip-changelog}
    config.user = 'voxpupuli'
    metadata_json = File.join(File.dirname(__FILE__), 'metadata.json')
    metadata = JSON.load(File.read(metadata_json))
    config.project = metadata['name']
  end
end

<%- [@configs['extras']].flatten.compact.each do |line| -%>
<%= line %>
<%- end -%>
